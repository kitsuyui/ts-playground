name: Release

on:
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    # "released" events are emitted either when directly be released or be edited from pre-released.
    types: [prereleased, released]

jobs:
  deploy:
    runs-on: ubuntu-latest

    continue-on-error: true

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4.2.0

      - uses: actions/setup-node@v5
        with:
          # https://nodejs.org/en/about/previous-releases
          node-version: '24.x'
          registry-url: 'https://registry.npmjs.org'
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: install and build
        run: |
          pnpm install
          pnpm build
          pnpm validate

      - name: Set tag rc
        if: github.event_name == 'pull_request'
        run: |
          git config user.email "dummy@dummy"
          git config user.name "dummy"
          # dummy tag for dry-run
          git tag v999.999.999-rc.$GITHUB_RUN_NUMBER

      - name: set git tag version
        run: |
          git config user.email "dummy@dummy"
          git config user.name "dummy"
          pnpm version from-git --allow-same-version --no-git-tag-version -ws || true
          pnpm format

      - name: deploy
        # https://docs.npmjs.com/generating-provenance-statements
        run: NPM_CONFIG_PROVENANCE=true pnpm publish --access=public --no-git-checks --recursive
        if: github.event_name == 'release' && !github.event.release.prerelease
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: deploy (dry-run)
        run: NPM_CONFIG_PROVENANCE=true pnpm publish --access=public --no-git-checks --dry-run --recursive
        if: github.event_name != 'release' || github.event.release.prerelease
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
